@startuml Authentication Service - Components and Connectors

Database "Client Database" as ClientDatabase

Component "Main : Authentication Microservice" <<Server>> {
  portin "Client Services" as ClientServices
  portin "System Clock" as SystemClock
  portin "System Status" as SystemStatus
  portin "OS Commands" as MOSCommands
  portout "Data Access" as DataAccess
  portout "Out Redundancy Services" as RedundancyServicesMain

  Component ": Load Balancer" as LoadBalancer {
    portin "Request Rate" as LBRequestRate
    portout "Workers" as LBWorkers
  }
  Component ": Cache" as Cache {
    portin "Manage" as CacheManage
  }
  Component ": Cache Service" as CacheService {
    portin "Current Time" as CSCurrentTime
    portout "Cache Access" as CSCacheAccess
  }
  Component ": Client Controller" as ClientController {
    portin "Requests" as CCRequests
    portout "Cache Access" as CCCache
    portout "Worker" as CCWorker
  }
  Component ": Monitoring Service" as MonitoringService {
    portin "Requests" as MSRequests
    portin "System Status" as MSSystemStatus
    portout "Request Rate" as MSRequestRate
  }
  Component ": Heartbeat Service" as HeartbeatService {
    portin "Current Time" as HBSCurrentTime
    portout "Heartbeat" as HBSHeartbeat
  }
  Component ": Database Service" as DatabaseService {
    portin "Clients" as DSClients
    portout "User Data" as DSUserData
    portout "Connection" as DSConnection
  }
  Component ": Request Filter" as RequestFilter {
    portin "Requests" as RFRequests
    portout "Safe Requests" as RFSafeRequests
  }
  Collections ": Worker" as Worker
  Collections ": Database Connection" as DatabaseConnection
}

ClientServices --> RFRequests
RFSafeRequests -(0- CCRequests : "<<Route>>"
RFSafeRequests -(0-- MSRequests : "<<Inform>>"

CCCache -(0- CacheManage : "<<Fetch/Update>>"
CSCacheAccess -(0-- CacheManage : "<<Invalidate>>"
SystemClock -- CSCurrentTime
SystemClock -- HBSCurrentTime
SystemStatus -- MSSystemStatus
MSRequestRate -(0- LBRequestRate : "<<Inform>>"
LBWorkers -- "Leader" Worker
CCWorker -(0- Worker : "<<Call>>"
DSConnection -- DatabaseConnection
Worker "Store" -(0- DSClients : "<<Read/Write>>"
DSUserData --> DataAccess
HBSHeartbeat --> RedundancyServicesMain

ClientDatabase -- DataAccess

Component "Copy : Authentication Microservice" {
  portin "In Redundancy Services" as RedundancyServicesCopy
  portout "OS Commands" as COSCommands

  Component ": Redundancy Controller" as RedundancyController {
    portin "Heartbeat" as RCHeartbeat
    portout "OS Commands" as RCOSCommands
  }
}

RedundancyServicesCopy --> RCHeartbeat
RCOSCommands --> COSCommands : "<<Kill/Spawn>>""

@enduml